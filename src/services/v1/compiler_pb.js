// source: services/v1/compiler.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.malloy.services.v1.CompileDocument', null, global);
goog.exportSymbol('proto.malloy.services.v1.CompileRequest', null, global);
goog.exportSymbol('proto.malloy.services.v1.CompileRequest.Type', null, global);
goog.exportSymbol('proto.malloy.services.v1.CompileResponse', null, global);
goog.exportSymbol('proto.malloy.services.v1.CompilerRequest', null, global);
goog.exportSymbol('proto.malloy.services.v1.CompilerRequest.Type', null, global);
goog.exportSymbol('proto.malloy.services.v1.SqlBlock', null, global);
goog.exportSymbol('proto.malloy.services.v1.SqlBlockSchema', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.malloy.services.v1.CompileRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.malloy.services.v1.CompileRequest.repeatedFields_, null);
};
goog.inherits(proto.malloy.services.v1.CompileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.malloy.services.v1.CompileRequest.displayName = 'proto.malloy.services.v1.CompileRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.malloy.services.v1.CompileResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.malloy.services.v1.CompileResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.malloy.services.v1.CompileResponse.displayName = 'proto.malloy.services.v1.CompileResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.malloy.services.v1.CompileDocument = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.malloy.services.v1.CompileDocument, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.malloy.services.v1.CompileDocument.displayName = 'proto.malloy.services.v1.CompileDocument';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.malloy.services.v1.CompilerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.malloy.services.v1.CompilerRequest.repeatedFields_, null);
};
goog.inherits(proto.malloy.services.v1.CompilerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.malloy.services.v1.CompilerRequest.displayName = 'proto.malloy.services.v1.CompilerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.malloy.services.v1.SqlBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.malloy.services.v1.SqlBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.malloy.services.v1.SqlBlock.displayName = 'proto.malloy.services.v1.SqlBlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.malloy.services.v1.SqlBlockSchema = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.malloy.services.v1.SqlBlockSchema, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.malloy.services.v1.SqlBlockSchema.displayName = 'proto.malloy.services.v1.SqlBlockSchema';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.malloy.services.v1.CompileRequest.repeatedFields_ = [3,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.malloy.services.v1.CompileRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.malloy.services.v1.CompileRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.malloy.services.v1.CompileRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.malloy.services.v1.CompileRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    document: (f = msg.getDocument()) && proto.malloy.services.v1.CompileDocument.toObject(includeInstance, f),
    referencesList: jspb.Message.toObjectList(msg.getReferencesList(),
    proto.malloy.services.v1.CompileDocument.toObject, includeInstance),
    schema: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sqlBlockSchemasList: jspb.Message.toObjectList(msg.getSqlBlockSchemasList(),
    proto.malloy.services.v1.SqlBlockSchema.toObject, includeInstance),
    query: jspb.Message.getFieldWithDefault(msg, 6, ""),
    namedQuery: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.malloy.services.v1.CompileRequest}
 */
proto.malloy.services.v1.CompileRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.malloy.services.v1.CompileRequest;
  return proto.malloy.services.v1.CompileRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.malloy.services.v1.CompileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.malloy.services.v1.CompileRequest}
 */
proto.malloy.services.v1.CompileRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.malloy.services.v1.CompileRequest.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.malloy.services.v1.CompileDocument;
      reader.readMessage(value,proto.malloy.services.v1.CompileDocument.deserializeBinaryFromReader);
      msg.setDocument(value);
      break;
    case 3:
      var value = new proto.malloy.services.v1.CompileDocument;
      reader.readMessage(value,proto.malloy.services.v1.CompileDocument.deserializeBinaryFromReader);
      msg.addReferences(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchema(value);
      break;
    case 5:
      var value = new proto.malloy.services.v1.SqlBlockSchema;
      reader.readMessage(value,proto.malloy.services.v1.SqlBlockSchema.deserializeBinaryFromReader);
      msg.addSqlBlockSchemas(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamedQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.malloy.services.v1.CompileRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.malloy.services.v1.CompileRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.malloy.services.v1.CompileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.malloy.services.v1.CompileRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getDocument();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.malloy.services.v1.CompileDocument.serializeBinaryToWriter
    );
  }
  f = message.getReferencesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.malloy.services.v1.CompileDocument.serializeBinaryToWriter
    );
  }
  f = message.getSchema();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSqlBlockSchemasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.malloy.services.v1.SqlBlockSchema.serializeBinaryToWriter
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getNamedQuery();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.malloy.services.v1.CompileRequest.Type = {
  COMPILE: 0,
  REFERENCES: 1,
  TABLE_SCHEMAS: 2,
  SQL_BLOCK_SCHEMAS: 3
};

/**
 * optional Type type = 1;
 * @return {!proto.malloy.services.v1.CompileRequest.Type}
 */
proto.malloy.services.v1.CompileRequest.prototype.getType = function() {
  return /** @type {!proto.malloy.services.v1.CompileRequest.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.malloy.services.v1.CompileRequest.Type} value
 * @return {!proto.malloy.services.v1.CompileRequest} returns this
 */
proto.malloy.services.v1.CompileRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional CompileDocument document = 2;
 * @return {?proto.malloy.services.v1.CompileDocument}
 */
proto.malloy.services.v1.CompileRequest.prototype.getDocument = function() {
  return /** @type{?proto.malloy.services.v1.CompileDocument} */ (
    jspb.Message.getWrapperField(this, proto.malloy.services.v1.CompileDocument, 2));
};


/**
 * @param {?proto.malloy.services.v1.CompileDocument|undefined} value
 * @return {!proto.malloy.services.v1.CompileRequest} returns this
*/
proto.malloy.services.v1.CompileRequest.prototype.setDocument = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.malloy.services.v1.CompileRequest} returns this
 */
proto.malloy.services.v1.CompileRequest.prototype.clearDocument = function() {
  return this.setDocument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.malloy.services.v1.CompileRequest.prototype.hasDocument = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated CompileDocument references = 3;
 * @return {!Array<!proto.malloy.services.v1.CompileDocument>}
 */
proto.malloy.services.v1.CompileRequest.prototype.getReferencesList = function() {
  return /** @type{!Array<!proto.malloy.services.v1.CompileDocument>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.malloy.services.v1.CompileDocument, 3));
};


/**
 * @param {!Array<!proto.malloy.services.v1.CompileDocument>} value
 * @return {!proto.malloy.services.v1.CompileRequest} returns this
*/
proto.malloy.services.v1.CompileRequest.prototype.setReferencesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.malloy.services.v1.CompileDocument=} opt_value
 * @param {number=} opt_index
 * @return {!proto.malloy.services.v1.CompileDocument}
 */
proto.malloy.services.v1.CompileRequest.prototype.addReferences = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.malloy.services.v1.CompileDocument, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.malloy.services.v1.CompileRequest} returns this
 */
proto.malloy.services.v1.CompileRequest.prototype.clearReferencesList = function() {
  return this.setReferencesList([]);
};


/**
 * optional string schema = 4;
 * @return {string}
 */
proto.malloy.services.v1.CompileRequest.prototype.getSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.malloy.services.v1.CompileRequest} returns this
 */
proto.malloy.services.v1.CompileRequest.prototype.setSchema = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated SqlBlockSchema sql_block_schemas = 5;
 * @return {!Array<!proto.malloy.services.v1.SqlBlockSchema>}
 */
proto.malloy.services.v1.CompileRequest.prototype.getSqlBlockSchemasList = function() {
  return /** @type{!Array<!proto.malloy.services.v1.SqlBlockSchema>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.malloy.services.v1.SqlBlockSchema, 5));
};


/**
 * @param {!Array<!proto.malloy.services.v1.SqlBlockSchema>} value
 * @return {!proto.malloy.services.v1.CompileRequest} returns this
*/
proto.malloy.services.v1.CompileRequest.prototype.setSqlBlockSchemasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.malloy.services.v1.SqlBlockSchema=} opt_value
 * @param {number=} opt_index
 * @return {!proto.malloy.services.v1.SqlBlockSchema}
 */
proto.malloy.services.v1.CompileRequest.prototype.addSqlBlockSchemas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.malloy.services.v1.SqlBlockSchema, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.malloy.services.v1.CompileRequest} returns this
 */
proto.malloy.services.v1.CompileRequest.prototype.clearSqlBlockSchemasList = function() {
  return this.setSqlBlockSchemasList([]);
};


/**
 * optional string query = 6;
 * @return {string}
 */
proto.malloy.services.v1.CompileRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.malloy.services.v1.CompileRequest} returns this
 */
proto.malloy.services.v1.CompileRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string named_query = 7;
 * @return {string}
 */
proto.malloy.services.v1.CompileRequest.prototype.getNamedQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.malloy.services.v1.CompileRequest} returns this
 */
proto.malloy.services.v1.CompileRequest.prototype.setNamedQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.malloy.services.v1.CompileResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.malloy.services.v1.CompileResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.malloy.services.v1.CompileResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.malloy.services.v1.CompileResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    model: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sql: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.malloy.services.v1.CompileResponse}
 */
proto.malloy.services.v1.CompileResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.malloy.services.v1.CompileResponse;
  return proto.malloy.services.v1.CompileResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.malloy.services.v1.CompileResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.malloy.services.v1.CompileResponse}
 */
proto.malloy.services.v1.CompileResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSql(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.malloy.services.v1.CompileResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.malloy.services.v1.CompileResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.malloy.services.v1.CompileResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.malloy.services.v1.CompileResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSql();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string model = 1;
 * @return {string}
 */
proto.malloy.services.v1.CompileResponse.prototype.getModel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.malloy.services.v1.CompileResponse} returns this
 */
proto.malloy.services.v1.CompileResponse.prototype.setModel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sql = 2;
 * @return {string}
 */
proto.malloy.services.v1.CompileResponse.prototype.getSql = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.malloy.services.v1.CompileResponse} returns this
 */
proto.malloy.services.v1.CompileResponse.prototype.setSql = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.malloy.services.v1.CompileDocument.prototype.toObject = function(opt_includeInstance) {
  return proto.malloy.services.v1.CompileDocument.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.malloy.services.v1.CompileDocument} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.malloy.services.v1.CompileDocument.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    content: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.malloy.services.v1.CompileDocument}
 */
proto.malloy.services.v1.CompileDocument.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.malloy.services.v1.CompileDocument;
  return proto.malloy.services.v1.CompileDocument.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.malloy.services.v1.CompileDocument} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.malloy.services.v1.CompileDocument}
 */
proto.malloy.services.v1.CompileDocument.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.malloy.services.v1.CompileDocument.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.malloy.services.v1.CompileDocument.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.malloy.services.v1.CompileDocument} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.malloy.services.v1.CompileDocument.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.malloy.services.v1.CompileDocument.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.malloy.services.v1.CompileDocument} returns this
 */
proto.malloy.services.v1.CompileDocument.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string content = 2;
 * @return {string}
 */
proto.malloy.services.v1.CompileDocument.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.malloy.services.v1.CompileDocument} returns this
 */
proto.malloy.services.v1.CompileDocument.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.malloy.services.v1.CompilerRequest.repeatedFields_ = [2,3,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.malloy.services.v1.CompilerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.malloy.services.v1.CompilerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.malloy.services.v1.CompilerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.malloy.services.v1.CompilerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    importUrlsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    tableSchemasList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    sqlBlock: (f = msg.getSqlBlock()) && proto.malloy.services.v1.SqlBlock.toObject(includeInstance, f),
    connectionsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    content: jspb.Message.getFieldWithDefault(msg, 99, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.malloy.services.v1.CompilerRequest}
 */
proto.malloy.services.v1.CompilerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.malloy.services.v1.CompilerRequest;
  return proto.malloy.services.v1.CompilerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.malloy.services.v1.CompilerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.malloy.services.v1.CompilerRequest}
 */
proto.malloy.services.v1.CompilerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.malloy.services.v1.CompilerRequest.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addImportUrls(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addTableSchemas(value);
      break;
    case 4:
      var value = new proto.malloy.services.v1.SqlBlock;
      reader.readMessage(value,proto.malloy.services.v1.SqlBlock.deserializeBinaryFromReader);
      msg.setSqlBlock(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addConnections(value);
      break;
    case 99:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.malloy.services.v1.CompilerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.malloy.services.v1.CompilerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.malloy.services.v1.CompilerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.malloy.services.v1.CompilerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getImportUrlsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getTableSchemasList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getSqlBlock();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.malloy.services.v1.SqlBlock.serializeBinaryToWriter
    );
  }
  f = message.getConnectionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      99,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.malloy.services.v1.CompilerRequest.Type = {
  UNKNOWN: 0,
  IMPORT: 1,
  TABLE_SCHEMAS: 2,
  SQL_BLOCK_SCHEMAS: 3,
  COMPLETE: 4
};

/**
 * optional Type type = 1;
 * @return {!proto.malloy.services.v1.CompilerRequest.Type}
 */
proto.malloy.services.v1.CompilerRequest.prototype.getType = function() {
  return /** @type {!proto.malloy.services.v1.CompilerRequest.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.malloy.services.v1.CompilerRequest.Type} value
 * @return {!proto.malloy.services.v1.CompilerRequest} returns this
 */
proto.malloy.services.v1.CompilerRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated string import_urls = 2;
 * @return {!Array<string>}
 */
proto.malloy.services.v1.CompilerRequest.prototype.getImportUrlsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.malloy.services.v1.CompilerRequest} returns this
 */
proto.malloy.services.v1.CompilerRequest.prototype.setImportUrlsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.malloy.services.v1.CompilerRequest} returns this
 */
proto.malloy.services.v1.CompilerRequest.prototype.addImportUrls = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.malloy.services.v1.CompilerRequest} returns this
 */
proto.malloy.services.v1.CompilerRequest.prototype.clearImportUrlsList = function() {
  return this.setImportUrlsList([]);
};


/**
 * repeated string table_schemas = 3;
 * @return {!Array<string>}
 */
proto.malloy.services.v1.CompilerRequest.prototype.getTableSchemasList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.malloy.services.v1.CompilerRequest} returns this
 */
proto.malloy.services.v1.CompilerRequest.prototype.setTableSchemasList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.malloy.services.v1.CompilerRequest} returns this
 */
proto.malloy.services.v1.CompilerRequest.prototype.addTableSchemas = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.malloy.services.v1.CompilerRequest} returns this
 */
proto.malloy.services.v1.CompilerRequest.prototype.clearTableSchemasList = function() {
  return this.setTableSchemasList([]);
};


/**
 * optional SqlBlock sql_block = 4;
 * @return {?proto.malloy.services.v1.SqlBlock}
 */
proto.malloy.services.v1.CompilerRequest.prototype.getSqlBlock = function() {
  return /** @type{?proto.malloy.services.v1.SqlBlock} */ (
    jspb.Message.getWrapperField(this, proto.malloy.services.v1.SqlBlock, 4));
};


/**
 * @param {?proto.malloy.services.v1.SqlBlock|undefined} value
 * @return {!proto.malloy.services.v1.CompilerRequest} returns this
*/
proto.malloy.services.v1.CompilerRequest.prototype.setSqlBlock = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.malloy.services.v1.CompilerRequest} returns this
 */
proto.malloy.services.v1.CompilerRequest.prototype.clearSqlBlock = function() {
  return this.setSqlBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.malloy.services.v1.CompilerRequest.prototype.hasSqlBlock = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string connections = 5;
 * @return {!Array<string>}
 */
proto.malloy.services.v1.CompilerRequest.prototype.getConnectionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.malloy.services.v1.CompilerRequest} returns this
 */
proto.malloy.services.v1.CompilerRequest.prototype.setConnectionsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.malloy.services.v1.CompilerRequest} returns this
 */
proto.malloy.services.v1.CompilerRequest.prototype.addConnections = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.malloy.services.v1.CompilerRequest} returns this
 */
proto.malloy.services.v1.CompilerRequest.prototype.clearConnectionsList = function() {
  return this.setConnectionsList([]);
};


/**
 * optional string content = 99;
 * @return {string}
 */
proto.malloy.services.v1.CompilerRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 99, ""));
};


/**
 * @param {string} value
 * @return {!proto.malloy.services.v1.CompilerRequest} returns this
 */
proto.malloy.services.v1.CompilerRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 99, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.malloy.services.v1.SqlBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.malloy.services.v1.SqlBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.malloy.services.v1.SqlBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.malloy.services.v1.SqlBlock.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sql: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.malloy.services.v1.SqlBlock}
 */
proto.malloy.services.v1.SqlBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.malloy.services.v1.SqlBlock;
  return proto.malloy.services.v1.SqlBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.malloy.services.v1.SqlBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.malloy.services.v1.SqlBlock}
 */
proto.malloy.services.v1.SqlBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSql(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.malloy.services.v1.SqlBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.malloy.services.v1.SqlBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.malloy.services.v1.SqlBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.malloy.services.v1.SqlBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSql();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.malloy.services.v1.SqlBlock.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.malloy.services.v1.SqlBlock} returns this
 */
proto.malloy.services.v1.SqlBlock.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sql = 2;
 * @return {string}
 */
proto.malloy.services.v1.SqlBlock.prototype.getSql = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.malloy.services.v1.SqlBlock} returns this
 */
proto.malloy.services.v1.SqlBlock.prototype.setSql = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.malloy.services.v1.SqlBlockSchema.prototype.toObject = function(opt_includeInstance) {
  return proto.malloy.services.v1.SqlBlockSchema.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.malloy.services.v1.SqlBlockSchema} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.malloy.services.v1.SqlBlockSchema.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sql: jspb.Message.getFieldWithDefault(msg, 2, ""),
    schema: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.malloy.services.v1.SqlBlockSchema}
 */
proto.malloy.services.v1.SqlBlockSchema.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.malloy.services.v1.SqlBlockSchema;
  return proto.malloy.services.v1.SqlBlockSchema.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.malloy.services.v1.SqlBlockSchema} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.malloy.services.v1.SqlBlockSchema}
 */
proto.malloy.services.v1.SqlBlockSchema.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSql(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchema(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.malloy.services.v1.SqlBlockSchema.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.malloy.services.v1.SqlBlockSchema.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.malloy.services.v1.SqlBlockSchema} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.malloy.services.v1.SqlBlockSchema.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSql();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSchema();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.malloy.services.v1.SqlBlockSchema.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.malloy.services.v1.SqlBlockSchema} returns this
 */
proto.malloy.services.v1.SqlBlockSchema.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sql = 2;
 * @return {string}
 */
proto.malloy.services.v1.SqlBlockSchema.prototype.getSql = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.malloy.services.v1.SqlBlockSchema} returns this
 */
proto.malloy.services.v1.SqlBlockSchema.prototype.setSql = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string schema = 3;
 * @return {string}
 */
proto.malloy.services.v1.SqlBlockSchema.prototype.getSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.malloy.services.v1.SqlBlockSchema} returns this
 */
proto.malloy.services.v1.SqlBlockSchema.prototype.setSchema = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.malloy.services.v1);
