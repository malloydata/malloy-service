// Copyright 2023 Google LLC
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files
// (the "Software"), to deal in the Software without restriction,
// including without limitation the rights to use, copy, modify, merge,
// publish, distribute, sublicense, and/or sell copies of the Software,
// and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

syntax = "proto3";

package malloy.services.v1;

service Compiler {
    rpc Compile (CompileRequest) returns (CompileResponse) {}

    rpc CompileStream(stream CompileRequest) returns (stream CompilerRequest) {}
}

message CompileRequest {
  enum Type {
    COMPILE = 0;
    REFERENCES = 1;
    TABLE_SCHEMAS = 2;
    SQL_BLOCK_SCHEMAS = 3;
  }
  CompileRequest.Type type = 1;


  CompileDocument document = 2;
  repeated CompileDocument references = 3;
  string schema = 4;
  repeated SqlBlockSchema sql_block_schemas = 5;
  string query = 6;
  string named_query = 7;
}

message CompileResponse {
  string model = 1;
  string sql = 2;
}

message CompileDocument {
  string url = 1;
  string content = 2;
}

message TableSchema {
  string key = 1;
  string connection = 2;
  string table = 3;
}

message CompilerRequest {
  enum Type {
    UNKNOWN = 0;
    IMPORT = 1;
    TABLE_SCHEMAS = 2;
    SQL_BLOCK_SCHEMAS = 3;
    COMPLETE = 4;
    ERROR = 5;
  }

  CompilerRequest.Type type = 1;
  repeated string import_urls = 2;
  repeated TableSchema table_schemas = 3;
  SqlBlock sql_block = 4;
  string connection = 5;

  string content = 99;
}

message SqlBlock {
  string name = 1;
  string sql = 2;
  string connection = 3;
}

message SqlBlockSchema {
  string name = 1;
  string sql = 2;
  string schema = 3;
}
